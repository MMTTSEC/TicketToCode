@page "/"

<PageTitle>Home</PageTitle>

<h1>Events</h1>
<input class="search" type="text" @bind="SearchQuery" @bind:event="oninput" @bind:after="Search" placeholder="Search..."/>

@if (!EventsAvailable) {
    <p class="noEventsFound">There are currently no events available.</p>
} else {
    <section id="events-wrapper">
        @foreach (var eventItem in events) {
            if (eventItem.Name.ToUpper().Contains(SearchQuery.ToUpper()))
            {
                SearchResultsFound++;
                <div id="event-@eventItem.Id" class="event-card">
                    <h2>@eventItem.Name <span class="event-type">@eventItem.Type</span></h2>
                    <p class="event-description">@eventItem.Description</p>
                    <p class="event-date"><span class="event-start">Event Start: @eventItem.StartTime</span><br /> <span class="event-end">Event End: @eventItem.EndTime</span></p>
                    <p class="event-attendees">
                        <span class="@(eventItem.RemainingSeats == 0 ? "error" : (eventItem.RemainingSeats < (eventItem.MaxAttendees / 2)) ? "warning" : "success")">
                            @eventItem.RemainingSeats
                            / @eventItem.MaxAttendees</span><br />Tickets Remaining
                    </p>
                    <div class="event-buttons-wrapper">
                        <button class="@(eventItem.RemainingSeats == 0 ? "event-button-closed" : "event-button")">@(eventItem.RemainingSeats == 0 ? "Fully Booked" : "Book Ticket")</button>
                    </div>
                </div>
            }
        }
        @if (SearchResultsFound == 0) {
            <p class="noEventsFound">No events found...</p>
        }
    </section>
}
@code {
    public bool EventsAvailable = true;
    public int SearchResultsFound = 0;
    public string SearchQuery = "";

    // Temporary event data
    List<Event> events = new List<Event> {
        new Event { Id = 1, Name = "Event 1", Description = "Event 1 Description, Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", Type = EventType.Concert, StartTime = DateTime.Parse("2025-04-01 18:00"), EndTime = DateTime.Parse("2025-04-01 21:00"), MaxAttendees = 100, Bookings = 100 },
        new Event { Id = 2, Name = "Event 2", Description = "Event 2 Description, Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", Type = EventType.Festival, StartTime = DateTime.Parse("2025-04-02 18:00"), EndTime = DateTime.Parse("2025-04-04 18:00"), MaxAttendees = 3300, Bookings = 1000 },
        new Event { Id = 3, Name = "Event 3", Description = "Event 3 Description, Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", Type = EventType.Concert, StartTime = DateTime.Parse("2025-04-03 18:00"), EndTime = DateTime.Parse("2025-04-04 00:00"), MaxAttendees = 1000, Bookings = 550 },
        new Event { Id = 4, Name = "Event 4", Description = "Event 4 Description, Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", Type = EventType.Theatre, StartTime = DateTime.Parse("2025-04-04 18:00"), EndTime = DateTime.Parse("2025-04-04 20:00"), MaxAttendees = 400, Bookings = 220 },
        new Event { Id = 5, Name = "Event 5", Description = "Event 5 Description, Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", Type = EventType.Other, StartTime = DateTime.Parse("2025-04-05 18:00"), EndTime = DateTime.Parse("2025-04-05 19:30"), MaxAttendees = 20, Bookings = 2 }
    };

    public class Event
    {
        public int Id { get; set; }
        public string Name { get; set; } = "New event";
        public string Description { get; set; } = string.Empty;
        public EventType Type { get; set; }
        public DateTime StartTime { get; set; }
        public DateTime EndTime { get; set; }
        public int MaxAttendees { get; set; }
        public int Bookings { get; set; }
        public int RemainingSeats => MaxAttendees - Bookings;
    }

    public enum EventType
    {
        Concert = 0,
        Festival,
        Theatre,
        Other
    }

    void Search() {
        SearchResultsFound = 0;
    }
}